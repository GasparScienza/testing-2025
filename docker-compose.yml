services:
  redis:
    image: redis:7
    command:
      - redis-server
      - --appendonly
      - "yes"
      - --auto-aof-rewrite-percentage
      - "100"
      - --auto-aof-rewrite-min-size
      - 64mb
      - --appendfsync
      - everysec
      - --maxmemory-policy
      - noeviction
      - --requirepass
      - "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD}
      - HTTP_USER=${REDIS_COMMANDER_USER}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD} 
    ports:
      - "8082:8081"
    depends_on:
      - redis

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d veterinaria"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3001:3000"
    environment:
      # DATABASE_URL: postgres://postgres:admin@db:5432/veterinaria
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      SECRET_JWT: ${SECRET_JWT}
    command: ["sh", "-c", "npx prisma migrate deploy && node dist/src/main"]
    # command: ["node", "dist/src/main"]

volumes:
  pgdata:
  redis-data: